// <auto-generated />
using System;
using AvanceradDotNetLabb2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvanceradDotNetLabb2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230417080936_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvanceradDotNetLabb2.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("AvanceradDotNetLabb2.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentCoursesId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentTeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentCoursesId");

                    b.HasIndex("StudentTeacherId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AvanceradDotNetLabb2.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AvanceradDotNetLabb2.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("AvanceradDotNetLabb2.Models.Student", b =>
                {
                    b.HasOne("AvanceradDotNetLabb2.Models.Course", "StudentCourses")
                        .WithMany()
                        .HasForeignKey("StudentCoursesId");

                    b.HasOne("AvanceradDotNetLabb2.Models.Teacher", "StudentTeacher")
                        .WithMany()
                        .HasForeignKey("StudentTeacherId");

                    b.Navigation("StudentCourses");

                    b.Navigation("StudentTeacher");
                });

            modelBuilder.Entity("AvanceradDotNetLabb2.Models.Subject", b =>
                {
                    b.HasOne("AvanceradDotNetLabb2.Models.Course", null)
                        .WithMany("CourseSubjects")
                        .HasForeignKey("CourseId");

                    b.HasOne("AvanceradDotNetLabb2.Models.Teacher", null)
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("AvanceradDotNetLabb2.Models.Course", b =>
                {
                    b.Navigation("CourseSubjects");
                });

            modelBuilder.Entity("AvanceradDotNetLabb2.Models.Teacher", b =>
                {
                    b.Navigation("TeacherSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
